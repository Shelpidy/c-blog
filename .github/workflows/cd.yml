name: CD Pipeline
run-name: Running CD Pipeline; deploying to aws ec2
on: 
    workflow_run:
        workflows: ["CI Pipeline"]
        types: 
           - completed      
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Deploy to Server
      uses: easingthemes/ssh-deploy@main
      with:
          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY}}
          REMOTE_HOST: ${{ secrets.EC2_HOST_DNS}}
          REMOTE_USER: ${{ secrets.EC2_USERNAME }}
          TARGET: ${{ secrets.EC2_TARGET }}
          EXCLUDE: "/dist/, /node_modules/,/.github/,/assets/,/models/,/.gitignore/"
          SCRIPT_BEFORE: |
           echo "UPDATING LINUX PACKAGES"
           sudo apt-get update -y
           cd home
           if [ -f docker-compose.yml ]
           then
               sudo docker-compose down
               sudo docker rmi fimiz/blog -f
               sudo docker rmi nginx_container -f
           fi
           cd ..
           sudo rm -rf /home/*
          SCRIPT_AFTER: |
            echo $RSYNC_STDOUT
          
  run:
      runs-on: ubuntu-latest
      steps:
      - uses: actions/checkout@v3
        env:
          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY}}
          REMOTE_HOST: ${{ secrets.EC2_HOST_DNS}}
          REMOTE_USER: ${{ secrets.EC2_USERNAME }}
          DOCKER_USERNAME: ${{secrets.DOCKER_USERNAME}} 
          DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
      - name: Run Servers and Nginx
        run: |
            echo "Connecting to ec2..."
            echo "$SSH_PRIVATE_KEY" > private_key && chmod 600 private_key
            ssh -o StrictHostKeyChecking=no -i private_key ${REMOTE_USER}@${REMOTE_HOST}

            echo "Connected to ec2 successfully"

            cd home

            ls -la 
            
            echo "GIVING EXEC PERMISSION TO fimiz.sh"
            sudo chmod +x fimiz.sh

            echo "SETTING ENVS WITH FIMIZ FILE"
            ./fimiz.sh

            echo "LOGIN TO DOCKERHUB"
            sudo docker login -u ${DOCKER_USERNAME} -p ${secrets.DOCKER_PASSWORD}

            echo "RUNNING DOCKER-COMPOSE"
            sudo docker-compose up --build